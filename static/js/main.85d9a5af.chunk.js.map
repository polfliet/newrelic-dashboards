{"version":3,"sources":["Partials/DatasourceItem.js","Partials/Datasource.js","Partials/Preview.js","Pages/Home.js","Partials/InstallationInstructions.js","Pages/View.js","App.js","serviceWorker.js","index.js"],"names":["DatasourceItem","props","name","source","state","className","this","React","Component","Datasource","sources","map","i","key","Preview","dashboard","screenshots","Math","floor","random","length","src","screenshot","alt","to","config","author","Home","search","setSearch","bind","event","value","setState","target","element","lowercaseSearch","toLowerCase","includes","toString","id","type","aria-describedby","placeholder","onChange","data","dashboards","filter","InstallationInstructions","sort","href","rel","App","find","match","params","handle","files","file","selected","visible","onClick","path","component","View","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85d9a5af.chunk.js","sourcesContent":["import React from 'react';\n\nclass DatasourceItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let name = '';\n    switch(props.source) {\n        case 'Transaction': name = 'APM'; break;\n        case 'SystemSample': name = 'Infrastructure'; break;\n        case 'ProcessSample': name = 'Infrastructure - Processes'; break;\n        default:\n            name = props.source;\n        break;\n    }\n\n    this.state = {\n        name,\n    };\n  }\n\n  render() {\n    return (\n      <span className=\"badge badge-dark\">{this.state.name}</span>\n    );\n  }\n\n}\n\nexport default DatasourceItem;\n","import React from 'react';\nimport DatasourceItem from './DatasourceItem';\n\nclass Datasource extends React.Component {\n\n  render() {\n    return (\n        <div className=\"sources\">\n            {this.props.sources.map((source, i) => {\n                return (<DatasourceItem key={source} source={source} />)\n            })}\n        </div>\n    );\n  }\n\n}\n\nexport default Datasource;\n","import React from 'react';\nimport Datasource from './Datasource';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nclass Preview extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'screenshot': this.props.dashboard.screenshots[Math.floor(Math.random() * this.props.dashboard.screenshots.length)],\n    };\n  }\n\n  render() {\n    return (\n        <div className=\"col-md-4\">\n            <div className=\"card mb-4 shadow-sm\">\n                <img src={ \"./data/\" + this.props.dashboard.name + \"/\" + this.state.screenshot} className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      <Link className=\"\" to={\"/view/\" + this.props.dashboard.name}>\n                        { this.props.dashboard.config.name }\n                      </Link>\n                    </h5>\n                    <Datasource sources={this.props.dashboard.sources} />\n                    <div className=\"d-flex justify-content-between align-items-center pt-3\">\n                        <small className=\"text-muted\">Created by: { this.props.dashboard.config.author }</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n\n}\n\nexport default Preview;\n","import React from 'react';\nimport Preview from '../Partials/Preview';\nimport data from '../data.json';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n        }\n\n        this.setSearch = this.setSearch.bind(this);\n        this.search = this.search.bind(this);\n    }\n\n    setSearch(event, value) {\n        this.setState({\n            search: event.target.value\n        })\n    }\n\n    search(element) {\n        let lowercaseSearch = this.state.search.toLowerCase();\n        if (element.config.name.toLowerCase().includes(lowercaseSearch)) {\n            return true;\n        }\n\n        if (element.sources.toString().toLowerCase().includes(lowercaseSearch)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <section className=\"jumbotron text-center\">\n                    <div className=\"container\">\n                        <h1>New Relic - Dashboards</h1>\n                        <p className=\"lead text-muted\">Library of selected New Relic dashboards with their dependencies.</p>\n                    </div>\n                </section>\n\n                <div className=\"album bg-light\">\n                    <div className=\"container\" id=\"root\">\n                        <div className=\"row py-5\">\n                            <input type=\"text\" className=\"form-control\" id=\"search\" aria-describedby=\"search\" placeholder=\"Search for specific datasource or technology\" value={this.state.search} onChange={this.setSearch} />\n                        </div>\n                        <div className=\"row py-3\">\n                        {data.dashboards.filter(this.search).map((dashboard, i) => {\n                            return (<Preview key={dashboard.name} dashboard={dashboard} />)\n                        })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\n\nclass InstallationInstructions extends React.Component {\n\n  render() {\n    return (\n        <ul>\n          {this.props.sources.sort().map((source, i) => {\n              switch(source) {\n                case 'ComputeSample':\n                  return ( <li key={source}><a href=\"https://docs.newrelic.com/docs/integrations/amazon-integrations/aws-integrations-list/aws-ec2-monitoring-integration\" target=\"_BLANK\" rel=\"noopener noreferrer\">Amazon EC2 monitoring integration</a></li> )\n                case 'PageView':\n                  return ( <li key={source}><a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/installation/install-new-relic-browser-agent\" target=\"_BLANK\" rel=\"noopener noreferrer\">New Relic Browser</a></li>)\n                case 'SyntheticCheck':\n                  return ( <li key={source}><a href=\"https://docs.newrelic.com/docs/synthetics/new-relic-synthetics/getting-started/introduction-new-relic-synthetics\" target=\"_BLANK\" rel=\"noopener noreferrer\">New Relic Synthetics</a></li>)\n                case 'SystemSample':\n                  return ( <li key={source}><a href=\"https://docs.newrelic.com/docs/infrastructure/install-configure-manage-infrastructure\" target=\"_BLANK\" rel=\"noopener noreferrer\">New Relic Infrastructure</a></li>)\n                case 'Transaction':\n                  return ( <li key={source}><a href=\"https://docs.newrelic.com/docs/apm\" target=\"_BLANK\" rel=\"noopener noreferrer\">New Relic APM</a></li>)\n                default:\n                  return ( <li key={source}>Unknown: {source}</li> )\n              }\n          })}\n        </ul>\n    );\n  }\n\n}\n\nexport default InstallationInstructions;\n","import React from 'react';\nimport Datasource from '../Partials/Datasource';\nimport InstallationInstructions from '../Partials/InstallationInstructions';\nimport data from '../data.json';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        'dashboard': data.dashboards.find(element => element.name === props.match.params.handle),\n        'visible': 0,\n    };\n  }\n\n  render() {\n    return (\n        <div className=\"album py-2\">\n            <div className=\"container\" id=\"root\">\n                <div className=\"row py-4\">\n                    <h2>{ this.state.dashboard.config.name }</h2>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-8\">\n                        <p><b>Created by:</b> { this.state.dashboard.config.author }</p>\n                        <Datasource sources={this.state.dashboard.sources} />\n                        <h5 className=\"pt-4\">Installation instructions</h5>\n                        <p>This dashboard requires the following New Relic products:</p>\n                        <InstallationInstructions sources={this.state.dashboard.sources} />\n                    </div>\n                    <div className=\"col-4\">\n                        <p><button className=\"btn btn-primary\">Import (TODO)</button></p>\n                        <p><button className=\"btn btn-primary\">Copy to clipboard (TODO)</button></p>\n                    </div>\n                </div>\n                <div className=\"row py-4\">\n                    <h3>Dashboards</h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <ul className=\"nav nav-tabs nav-fill\">\n                            {this.state.dashboard.files.map((file, i) => {\n                                let selected = '';\n                                if (this.state.visible === i) selected = 'active';\n                                return (\n                                    <li className=\"nav-item\" key={file.name}>\n                                        <button className={\"nav-link \" + selected} onClick={(event) => { this.setState({visible: i}) }}>{file.name}</button>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    {this.state.dashboard.files.map((file, i) => {\n                        if (this.state.visible !== i) return ( <span key={file.name}></span> );\n                        return (\n                            <div className=\"row px-4 py-2 dashboard-info\" key={file.name}>\n                                <h4>Screenshot</h4>\n                                <img src={ \"data/\" + this.state.dashboard.name + \"/\" + this.state.dashboard.screenshots[i]} className=\"card-img-top\" alt=\"...\" />\n                            </div>\n                        )\n                    })}\n                </div>\n\n            </div>\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    HashRouter\n  } from \"react-router-dom\";\nimport Home from './Pages/Home';\nimport View from './Pages/View';\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/view/:handle\" component={View} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </HashRouter>\n        )\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}